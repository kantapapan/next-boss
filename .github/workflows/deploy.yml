name: 🚀 Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # メインアプリケーションのビルド
  build:
    name: 🏗️ Build Main Application
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'next-boss/package-lock.json'
          
      - name: 🔧 Install dependencies
        run: |
          cd next-boss
          npm ci
          
      - name: 🏗️ Build application
        run: |
          cd next-boss
          npm run build
          
      - name: 📤 Upload build artifacts
        uses: actions/upload-pages-artifact@v3
        with:
          path: next-boss/out

  # GitHub Pagesへのデプロイ
  deploy:
    name: 🚀 Deploy to GitHub Pages
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: 🚀 Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        
      - name: 🎉 Deployment success
        run: |
          echo "🎉 Successfully deployed to GitHub Pages!"
          echo "🌐 URL: ${{ steps.deployment.outputs.page_url }}"

  # デプロイ後の健全性チェック
  health-check:
    name: 🏥 Health Check
    runs-on: ubuntu-latest
    needs: deploy
    
    steps:
      - name: 🔍 Check deployment health
        run: |
          # GitHub Pagesの準備ができるまで少し待つ
          sleep 30
          
          # デプロイされたサイトの健全性をチェック
          url="${{ needs.deploy.outputs.page_url }}"
          if [ -n "$url" ]; then
            echo "🔍 Checking health of: $url"
            
            # HTTPステータスコードをチェック
            status_code=$(curl -s -o /dev/null -w "%{http_code}" "$url" || echo "000")
            
            if [ "$status_code" = "200" ]; then
              echo "✅ Health check passed! Status: $status_code"
            else
              echo "❌ Health check failed! Status: $status_code"
              exit 1
            fi
          else
            echo "⚠️ Deployment URL not available yet"
          fi
        continue-on-error: true
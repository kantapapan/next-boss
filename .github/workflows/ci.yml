name: 🚀 CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '18'

jobs:
  # 基本的なコード品質チェック
  code-quality:
    name: 📋 Code Quality Check
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: 'next-boss/package-lock.json'
          
      - name: 🔧 Install dependencies
        run: |
          cd next-boss
          npm ci
          
      - name: 🔍 ESLint check
        run: |
          cd next-boss
          npm run lint
          
      - name: 🏗️ TypeScript check
        run: |
          cd next-boss
          npx tsc --noEmit
          
      - name: 🎨 Prettier check
        run: |
          cd next-boss
          npx prettier --check "**/*.{js,jsx,ts,tsx,json,md}"
        continue-on-error: true

  # 複数の学習例を並列でビルドテスト
  build-examples:
    name: 🏗️ Build Examples
    runs-on: ubuntu-latest
    needs: code-quality
    
    strategy:
      matrix:
        example: [
          '01-basic-setup',
          '02-pages-and-routing', 
          '03-components-and-props',
          '04-server-client-components',
          '05-data-fetching',
          '06-styling-methods',
          '07-forms-and-validation',
          '08-api-routes',
          '09-full-app-example'
        ]
      fail-fast: false
      
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 🔧 Install dependencies for ${{ matrix.example }}
        run: |
          cd next-boss/examples/${{ matrix.example }}
          if [ -f package.json ]; then
            npm ci
          else
            echo "No package.json found, skipping..."
          fi
          
      - name: 🏗️ Build ${{ matrix.example }}
        run: |
          cd next-boss/examples/${{ matrix.example }}
          if [ -f package.json ]; then
            npm run build
          else
            echo "No build script found, skipping..."
          fi
          
      - name: 🧪 Test ${{ matrix.example }}
        run: |
          cd next-boss/examples/${{ matrix.example }}
          if [ -f package.json ] && npm run | grep -q "test"; then
            npm test
          else
            echo "No test script found, skipping..."
          fi
        continue-on-error: true

  # セキュリティスキャン
  security-scan:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest
    needs: code-quality
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: 'next-boss/package-lock.json'
          
      - name: 🔧 Install dependencies
        run: |
          cd next-boss
          npm ci
          
      - name: 🔍 Run npm audit
        run: |
          cd next-boss
          npm audit --audit-level=moderate
        continue-on-error: true
        
      - name: 🔒 CodeQL Analysis
        uses: github/codeql-action/init@v3
        with:
          languages: javascript
          
      - name: 🔍 Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  # ドキュメント整合性チェック
  docs-check:
    name: 📚 Documentation Check
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 🔍 Check README links
        run: |
          # README.mdのリンクが有効かチェック
          if grep -q "next-boss/examples" README.md; then
            echo "✅ README links look correct"
          else
            echo "❌ README links may be incorrect"
            exit 1
          fi
          
      - name: 📋 Check example directories
        run: |
          # 各学習例のディレクトリが存在するかチェック
          examples=(
            "01-basic-setup"
            "02-pages-and-routing"
            "03-components-and-props"
            "04-server-client-components"
            "05-data-fetching"
            "06-styling-methods"
            "07-forms-and-validation"
            "08-api-routes"
            "09-full-app-example"
          )
          
          for example in "${examples[@]}"; do
            if [ -d "next-boss/examples/$example" ]; then
              echo "✅ $example directory exists"
            else
              echo "❌ $example directory missing"
              exit 1
            fi
          done
          
      - name: 📖 Check documentation files
        run: |
          # ドキュメントファイルの存在チェック
          docs=(
            "01-getting-started.md"
            "02-routing.md"
            "03-components.md"
            "04-data-fetching.md"
            "05-styling.md"
            "06-api-routes.md"
          )
          
          for doc in "${docs[@]}"; do
            if [ -f "next-boss/docs/$doc" ]; then
              echo "✅ $doc exists"
            else
              echo "❌ $doc missing"
              exit 1
            fi
          done

  # 学習進捗レポート生成
  progress-report:
    name: 📊 Progress Report
    runs-on: ubuntu-latest
    needs: [build-examples, docs-check]
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 📊 Generate progress report
        run: |
          echo "# 🚀 Next Boss Progress Report" > progress-report.md
          echo "" >> progress-report.md
          echo "Generated on: $(date)" >> progress-report.md
          echo "" >> progress-report.md
          
          # 学習例の数をカウント
          example_count=$(find next-boss/examples -maxdepth 1 -type d | grep -E '[0-9]{2}-' | wc -l)
          echo "📚 **Learning Examples**: $example_count completed" >> progress-report.md
          
          # ドキュメントの数をカウント
          doc_count=$(find next-boss/docs -name "*.md" | wc -l)
          echo "📖 **Documentation Files**: $doc_count completed" >> progress-report.md
          
          # 進捗率を計算（15セクション中）
          total_sections=15
          completed_sections=11
          progress=$((completed_sections * 100 / total_sections))
          echo "📈 **Overall Progress**: ${progress}% (${completed_sections}/${total_sections})" >> progress-report.md
          
          echo "" >> progress-report.md
          echo "## 🎯 Completed Sections" >> progress-report.md
          echo "" >> progress-report.md
          
          for dir in next-boss/examples/*/; do
            if [ -d "$dir" ]; then
              example_name=$(basename "$dir")
              echo "- ✅ $example_name" >> progress-report.md
            fi
          done
          
      - name: 📤 Upload progress report
        uses: actions/upload-artifact@v4
        with:
          name: progress-report
          path: progress-report.md
          retention-days: 30

  # 成功時の通知
  success-notification:
    name: 🎉 Success Notification
    runs-on: ubuntu-latest
    needs: [build-examples, security-scan, docs-check]
    if: success()
    
    steps:
      - name: 🎉 Success message
        run: |
          echo "🎉 All checks passed successfully!"
          echo "✅ Code quality: PASSED"
          echo "✅ Build examples: PASSED"
          echo "✅ Security scan: PASSED"
          echo "✅ Documentation: PASSED"
          echo ""
          echo "🚀 Ready for deployment!"